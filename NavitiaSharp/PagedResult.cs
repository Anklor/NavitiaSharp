using RestSharp.Deserializers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NavitiaSharp
{
    //public class PagedResult<T> where T : new()
    //{
    //    [DeserializeAs(Name = "start_page")]
    //    public int StartPage { get; set; }

    //    [DeserializeAs(Name = "items_on_page")]
    //    public int ItemsOnPage { get; set; }

    //    [DeserializeAs(Name = "items_per_page")]
    //    public int ItemsPerPage { get; set; }

    //    [DeserializeAs(Name = "total_result")]
    //    public int TotalResult { get; set; }
    //}

    // Generated by Xamasoft JSON Class Generator
    // http://www.xamasoft.com/json-class-generator

    internal class PagedResult<T> where T : new()
    {

        [DeserializeAs(Name = "disruptions")]
        public object[] Disruptions { get; set; }

        [DeserializeAs(Name = "pagination")]
        public Pagination Pagination { get; set; }

        [DeserializeAs(Name = "stop_areas")]
        public List<T> Results{ get; set; }

        [DeserializeAs(Name = "links")]
        public Link[] Links { get; set; }
    }

    internal class Pagination
    {

        [DeserializeAs(Name = "start_page")]
        public int StartPage { get; set; }

        [DeserializeAs(Name = "items_on_page")]
        public int ItemsOnPage { get; set; }

        [DeserializeAs(Name = "items_per_page")]
        public int ItemsPerPage { get; set; }

        [DeserializeAs(Name = "total_result")]
        public int TotalResult { get; set; }
    }



    internal class Link
    {

        [DeserializeAs(Name = "href")]
        public string Href { get; set; }

        [DeserializeAs(Name = "type")]
        public string Type { get; set; }

        [DeserializeAs(Name = "rel")]
        public string Rel { get; set; }

        [DeserializeAs(Name = "templated")]
        public bool Templated { get; set; }
    }



}
